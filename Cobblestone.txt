// Weapon setups
// Wands
var vigorWands = [
    ^"vigor wand +11", 
    ^"vigor wand +10"]
var aetherWands = [
    ^"aether wand *8", 
    ^"aether wand *7"]
var fireWands = [
    ^"fire wand *8", 
    ^"fire wand *7"]
var iceWands = [
    ^"ice wand +11", 
    ^"ice wand +8"]
var stunlock = [
    ^"stone hammer +9", 
    ^"aether hammer"]

// Swords
var unmakeSwords = [
    ^"aether sword dU +10", 
    ^"aether sword dU +9"]
var chillSwords = [
    ^"ice sword dI", 
    ^"ice sword dI -gold"]

var poisonSwords = [
    ^"poison sword D +10", 
    ^"poison sword D +8"]
var iceSwords = [
    ^"ice sword D +9", 
    ^"ice sword D +8"]
var fireSwords = [
    ^"fire sword +7", 
    ^"fire sword +8"]
var vigorSwords = [
    ^"vigor sword +11", 
    ^"vigor sword +10"]

var elementalSwordDict = [
    ["ice", iceSwords],
    ["fire", fireSwords],
    ["posion", poisonSwords],
    ["aether", unmakeSwords],
    ["vigor", vigorSwords],
]

// Data vars
var allAbilities = [
  "mind","hammer","bardiche","blade",
  "skeleton_arm","mask","fire_talisman",
  "cinderwisp","quarterstaff","dash","bash",
]
var abilityHUDNames = [
    "mind","ham","bard", "bfg","arm","mask",
    "tali","wisp","qtr","dash","bash"
]
// Config vars
var shouldHarvest = false
var shouldPauseSkip = true
var xpFarm = false

// Globals
var hasEncountedBoss = false
var hasPauseSkipped = false
var aiState = 0

var foeDebuffs = ""
var smiteStack = 0
var chillStack = 0

func ResetGlobals()
    hasEncountedBoss = false
    hasPauseSkipped = false
    aiState = 0

func ResetGlobalsPerFrame()
    foeDebuffs = foe.debuffs.string
    smiteStack = 
    ^GetEffectStack(buffs.string,"smite")
    chillStack = 
    ^GetEffectStack(foeDebuffs,"debuff_chill")
    // Equip resets
    toEquipL = ""
    toEquipR = ""
    toEquip = ""
    shouldActivate = false
    
// Find weak rune to use later
var weakRune = stone
?foe = vigor
    weakRune = poison
?foe = poison
    weakRune = ice
?foe = ice
    weakRune = fire
?foe = fire
    weakRune = aether
?foe = aether
    weakRune = vigor

// Helper Functions
func Between(value, min, max)
    return value >= min & value <= max

func ItemCD(itemName)
    return item.GetCooldown(itemName)

func CanUse(itemName)
    return item.CanActivate(itemName)

func CanUseItem()
    return item.CanActivate()

func FormatTime(timeVal)
    return time.FormatCasual(timeVal)

func FoeWithin(val)
    return foe.distance <= val & 
    ^foe.distance >= 0 // why is this a problem

func PotionIs(pot)
    return item.potion = pot
// Item Equip Helper
var toEquipL = ""
var toEquipR = ""
var toEquip = ""
var shouldActivate = false

func SetEquipL(itemName)
    toEquipL = itemName

func SetEquipR(itemName)
    toEquipR = itemName

func SetEquip(itemName)
    toEquipL = ""
    toEquipR = ""
    toEquip = itemName

func ActivateItem()
    shouldActivate = true

func EquipItems()
    ?toEquipL
        equipL @toEquipL@
    ?toEquipR
        equipR @toEquipR@
    ?toEquip
        equip @toEquip@

func ActivateItems()
    ?shouldActivate & CanUseItem()
        activate R

// Cross lookup
func xLookup(val, arr1, arr2)
    var index = arr1.IndexOf(val)
    ?index > -1
        return arr2[index]
    :
        return false

func DictVal(dict, dictKey)
    for i = 0 .. dict.Count()-1
        var value = dict[i]
        ?value[0] = dictKey
            return value[1]

// Misc Functions
func EquipDash()
    ?ItemCD("bash") <= 0 
        SetEquipR("bashing shield")
    :?ItemCD("dash") <= 0
        SetEquipR("dashing shield")

func InDashRange()
    return 
    ^foe.distance >= 11 & foe.distance <= 16

func EquipDashInRange()
    ?InDashRange()
        EquipDash()
        return true
    return false

func EquipSet(set) 
    SetEquipL(set[0])
    SetEquipR(set[1])

// Uses chill until fully chilled
func EquipChillSwordsOr(set)
    ?chillStack < 6
        EquipSet(chillSwords)
    :
        EquipSet(set)

func PickupWhenClose()
    ?pickup.distance < 10
        SetEquipR("star")

func GetEffectStack(str, uid)
    // Does not have
    ?!(str = uid)
        return 0
    // Split
    var parts = 
        ^string.Split(str, ":", ",", false)
    var i = parts.IndexOf(uid)
    // return duration for stun
    ?uid = "stun"
        return int.Parse(parts[i+2])
    // stacks
    return int.Parse(parts[i+1])

func TryBardicheAbility()
    var cooldown = ItemCD("bardiche")
    ?foe.distance <= 10 &
    ^cooldown <= 0 | cooldown > 870
        SetEquip("bardiche")
        ActivateItem()

func BrewBeserk()
    ?loc.begin
        brew wood + bronze
// broken idk why
func BrewPot(toBrew)
    ?!loc.begin
        return
    ?toBrew = "experience"
        brew wood + wood
    :?toBrew = "strength"
        brew stone + stone
    :?toBrew = "healing"
        brew tar + tar
    :?toBrew = "lightning"
        brew bronze + bronze
    :?toBrew = "invisibility"
        brew wood + stone
    :?toBrew = "cleansing"
        brew wood + tar
    :?toBrew = "berserk"
        brew wood + bronze
    :?toBrew = "defensive"
        brew stone + tar
    :?toBrew = "lucky"
        brew stone + bronze
    :?toBrew = "vampiric"
        brew tar + bronze

func IsMushroomBoss()
    return foe = mushroom_boss |
    ^foe = mushroom_boss_fat | 
    ^foe = mushroom_boss_skinny

func QtrDash()
    ?foe.count ! 0
        return
    var cooldown = ItemCD("quarterstaff")
    // Keep equipped
    ?cooldown > 175
        SetEquip("quarterstaff")
    // Use 
    :?cooldown <= 0 &
    ^CanUseItem()
        SetEquip("quarterstaff")
        ActivateItem()

// Double-screen BFG/Smite
var scrolling = 0
func DoubleBlade()
    var bladeReady = ItemCD("blade") <= 0
    ?bladeReady & foe.count > 3
        scrolling++
        screen.Next()
    :
        scrolling = 0
        screen.ResetOffset()
    ?bladeReady & 
    ^foe.distance < 25 & 
    ^(foe.count > 5 | scrolling > 15)
        SetEquip("blade")
        ActivateItem()
        return true
    return scrolling > 0

func UseHealth(hp_threshold)
    ?loc.begin
        brew tar
    ?hp < hp_threshold
        activate potion

func FireTalisman()
    var cooldown = ItemCD("fire_talisman")
    ?summon.count = 0 | cooldown > 130
        SetEquipR("fire talisman")
        ?cooldown <= 0
        ^ & CanUseItem()
            ActivateItem()

func MaskAbility()
    ?ItemCD("mask") <= 0 
        SetEquip("mask")
        ActivateItem()

func RunAAC()
    ?item.left.state = 3
        equipL *0 wand //trash
        equipL @item.left@
    ?item.right.state = 3
        equipR *0 shield //trash
        equip @item.right@

// LOCATIONS
func Rocky()
    //BrewPot("beserk")
    ?loc.begin
        brew wood + bronze

    ?foe.distance > 16
        return

    ?EquipDashInRange()
        return

    MaskAbility()

    // might not be weak to fire in new patch
    // Phase 1 - Weak to fire
    ?foe = dysangelos_bearer
       ?item.potion ! empty & loc.stars <= 5
            activate potion
        EquipSet(fireSwords)

        EquipChillSwordsOr(fireSwords)
            
    // Phase 2
    ?foe = dysangelos_elementalist
        // Use weak
        SetEquipL(weakRune + " sword")
        SetEquipR(weakRune + " shield")

    // Phase 3
    ?foe = dysangelos_perfected
        ?item.potion ! empty
            activate potion

        var weakness = FindDysaWeakness()
        var swordSet = 
        ^DictVal(elementalSwordDict,weakness)

        EquipSet(swordSet)

        // Dodge sky laser
        ?foe.state = 115 & foe.time > 60
            SetEquipR("mind")
            return

    // slam his ass
    TryBardicheAbility()

// For Phase 3 - gets strong to some elements
func FindDysaWeakness()
  ?foe.buffs.string ! "ice"
    return "ice"
  :?foe.buffs.string ! "fire"
    return "fire"
  :?foe.buffs.string ! "aether"
    return "aether"
  :?foe.buffs.string ! "vigor"
    return "vigor"
  :
    return "poison"

// ===================
// Deadwood Canyon
// ===================
func Deadwood()
    // Experience Potion
    ?loc.stars <= 5 & xpFarm
        brew wood
        ?item.potion ! empty & 
        ^Between(time, 60, 500)
            activate potion
    :
        brew tar
        //BrewBeserk()

    SetEquipL("triskelion")
    SetEquipR("ice shield")
    PickupWhenClose()

    // Harvesting
    ?harvest.distance < 10 & shouldHarvest
        SetEquip("hatchet")

    // Miniboss
    ?(foe = wasp | foe = wasp_nest) & 
    ^FoeWithin(16)
        DeadwoodMinibosss()
        return
    // Boss
    ?foe = boss & FoeWithin(16)
        DeadwoodBoss()
        return

    // General
    DoubleBlade()
    ?FoeWithin(16)     
        ?EquipDashInRange()
            return
        SetEquip("ice staff")

func DeadwoodMinibosss()
    ?EquipDashInRange()
        return
    EquipSet(iceWands)

func DeadwoodBoss()
    ?EquipDashInRange()
        return
        
    >@item.potion@
    ?PotionIs("beserk")
        activate potion

    ?foe = poena
        EquipSet(stunlock)
        TryBardicheAbility()

        // Just restore HP at the end
        ?PotionIs("health") & hp ! maxhp
            activate potion

        // ?foe.state = 32
        //     SetEquipL("mind")
    :?foe = tree_boss
        EquipChillSwordsOr(vigorSwords)

// ===================
// Caves of Fear
// ===================
func Caves()
    // TODO move next screen and
    // use the snake on bolesh 
    BrewBeserk()

    SetEquipL("triskelion")
    SetEquipR("ice shield")
    PickupWhenClose()

    // Miniboss - whys it called that
    ?foe = cool_bat & FoeWithin(16)
        CavesMiniBoss()
        return
    // Boss
    ?foe = spider_boss & FoeWithin(16)
        CavesBoss()
        return

    // General
    DoubleBlade()

    ?EquipDashInRange()
        return

    ?FoeWithin(16)
        EquipSet(iceWands)

func CavesMiniBoss()
    ?EquipDashInRange()
        return

    EquipChillSwordsOr(iceSwords)
    //EquipSet(stunlock)

func CavesBoss()
    ?item.potion ! empty
        activate potion

    ?foe.distance > 11 & foe.state ! 142
        EquipDash()
        return
    ?foe.state = 142 & foe.time = 60
        SetEquipL("mind")
        return

    MaskAbility()

    EquipChillSwordsOr(iceSwords)
    TryBardicheAbility()

// ===================
// Mushroom forest
// ===================
func Mushroom()
    BrewBeserk()

    SetEquipL("triskelion")
    SetEquipR("poison shield")

    ?EquipDashInRange()
        return

    // Boss
    ?IsMushroomBoss() & FoeWithin(16)
        MushroomBoss()
        return

    // Miniboss
    ?foe = boss & FoeWithin(16)
        EquipChillSwordsOr(poisonSwords)
        return

    DoubleBlade()

    ?FoeWithin(16)
        EquipSet(iceWands)

func MushroomBoss() 
    ?item.potion ! empty
        activate potion

    ?foe = mushroom_boss_fat
        MaskAbility()
        
    EquipChillSwordsOr(poisonSwords)
    TryBardicheAbility()   

    ?foe ! mushroom_boss
        QtrDash()

// ===================
// Haunted Halls
// ===================
func Halls()
    ?loc.begin
        brew wood + bronze

    SetEquipL("triskelion")
    SetEquipR("vigor shield")

    // Boss
    ?foe = pallas & FoeWithin(16)
        HallsBoss()
        return

    // Miniboss
    ?foe = spawner & foe = boss &
    ^FoeWithin(16)
        EquipChillSwordsOr(vigorSwords)
        return

    // General
    DoubleBlade()

    ?EquipDashInRange()
        return

    ?FoeWithin(16) 
        EquipSet(iceWands)

func HallsBoss()
    ?item.potion ! empty
        activate potion

    MaskAbility()

    // Pause skip
    ?shouldPauseSkip & !hasPauseSkipped &
    ^foe = legless
        hasPauseSkipped = true
        ui.OpenInv()
        return

    ?EquipDashInRange()
        return

    EquipChillSwordsOr(vigorSwords)

    // deal with skellys
    ?foe.count > 2
        SetEquip("bardiche")

    TryBardicheAbility()   

// ===================
// Boiling Mine
// ===================       
func Mine()
    ?loc.begin
        brew wood + bronze
        
    SetEquipL("triskelion")
    SetEquipR("aether shield")
    PickupWhenClose()

    // Mini Boss
    ?foe = explode
        MineMiniboss()
        return

    // Boss
    ?foe = boss & FoeWithin(20) &
    ^foe = bronze_guardian
        MineBoss()
        return

    // General
    DoubleBlade()

    ?EquipDashInRange()
        return

    ?FoeWithin(16)
        ?foe.GetCount(10) = 1 & smiteStack = 0
            EquipSet(unmakeSwords)
            return
        EquipSet(iceWands)
                
func MineMiniboss()
    ?foe.distance <= 16 & foe.distance >= 11
        SetEquipR("dash") // no bash
    ?foe.distance < 8
        SetEquipR("mind")

func MineBoss() 
    ?item.potion ! empty
        activate potion

    MaskAbility()

    // Attack
    ?foe.state = 32
        ?foe.time > 15
            SetEquipL("mind")
            SetEquipR("aether shield")
            aiState = 1
    // Cooldown - can melee
    :?foe.state = 33
        ?aiState = 1
            EquipDash()
            ?ItemCD("dash") > 0 |
            ^ItemCD("bash") > 0
                aiState = 2
        :
            EquipSet(unmakeSwords)
            TryBardicheAbility()
    :
        aiState = 0
        SetEquip("aether crossbow")
        //EquipSet(aetherWands)


// ===================
// Icy Ridge
// ===================
func Icy()
    ?loc.begin
        brew wood + bronze

    SetEquipL("triskelion")
    SetEquipR("fire shield")

    // Mark boss
    ?foe = yeti & FoeWithin(16)
        hasEncountedBoss = true

    // Boss
    ?hasEncountedBoss & FoeWithin(16) 
        IceBoss()
        return

    ?foe = giant ice elemental & 
    ^FoeWithin(16)
        IceMiniboss()
        return

    // General
    DoubleBlade()

    ?EquipDashInRange()
        return

    ?FoeWithin(16)
        // Unmake pillar
        ?(foe = ice_pillar | foe = ice_wall) 
            EquipSet(unmakeSwords)
            return
        
        ?smiteStack = 0
            EquipSet(fireSwords)
            return
        EquipSet(iceWands)

func IceMiniboss()
    ?EquipDashInRange()
        return

    var stunTime = 
    ^GetEffectStack(foeDebuffs, "stun")
    
    >`0,10,stun:@stunTime@

    EquipSet(fireSwords)

func IceBoss() 
    ?item.potion ! empty
        activate potion

    // intro state
    ?foe.armor > 0
        ?foe.distance > 10
            EquipDash() 
        :
            EquipSet(fireSwords)
        return

    // Pause skip
    ?shouldPauseSkip & !hasPauseSkipped
        hasPauseSkipped = true
        ui.OpenInv()
        return

    MaskAbility()

    // blowing
    ?foe.state = 133
        EquipSet(fireWands)
        return
    // General strat
    ?foe.distance > 10
        EquipDash()
    :
        EquipChillSwordsOr(fireSwords)
        TryBardicheAbility()

// ===================
// Temple 
// ===================
func Temple()
    BrewPot("berserk")

    SetEquipL("triskelion")
    SetEquipR("ice shield")

    // Boss
    ?foe = nagaraja & FoeWithin(16)
        TempleBoss()
        return

    // General
    DoubleBlade()

    ?EquipDashInRange()
        return

    ?FoeWithin(16)
        ?foe = acronian_cultist
            EquipChillSwordsOr(iceSwords)
            return

        EquipSet(iceWands)

func TempleBoss()
    ?item.potion ! empty
        activate potion

    ?foe.distance > 11 & foe.state ! 112
        EquipDash()
        return

    // Dodge Brick
    ?foe.state = 112 & foe.time = 45
        SetEquipL("mind")
        return

    EquipChillSwordsOr(iceSwords)
    //SetEquip("ice crossbow")

func ColorCD(cd)
    ?cd > 0
        return "red"
    return "green"

func HUD()
    // Disable utility belt
    disable hud u 

    var bottom = screen.h - 2

    // CD HUD
    var x = screen.w - 10
    var x2 = screen.w - 5
    var y = 1
    for abi : allAbilities
        var cd = ItemCD(abi)     
        var text = xLookup(abi,allAbilities,
        ^abilityHUDNames)
        var textCol = ColorCD(cd)

        >`@x@,@y@,#@textCol@,
        ^@string.Capitalize(text)@

        >`@x2@,@y@,#@textCol@,
        ^@time.FormatDigital(cd)@
        y++

    // Boss state
    ?foe = boss
        >`0,6,State: @foe.state@ 
        ^Time: @foe.time@
    >`0,7,Dist: @foe.distance@
    >`0,8,X: @pos.x@
    >`0,9,Foe Count: @foe.count@
    
    // Time
    var current = 
        ^FormatTime(totaltime) + " " + 
        ^totaltime + "F"
    var best = 
        ^FormatTime(loc.bestTime) + " " + 
        ^loc.bestTime + "F"
    var average = 
        ^FormatTime(loc.averageTime) + " " + 
        ^loc.averageTime + "F"

    >`0,@bottom - 2@,Cur:
    >`7,@bottom - 2@,@current@

    >`0,@bottom - 1@,Best:
    >`7,@bottom - 1@,@best@

    >`0,@bottom@,Avg:
    >`7,@bottom@,@average@

func Main()
    // Always run animation cancel
    RunAAC()

    ResetGlobalsPerFrame()
    ?loc.begin | loc.loop
        ResetGlobals()

    // Default 
    SetEquipL("triskelion")
    SetEquipR("ouroboros")
    PickupWhenClose()

    // always dash
    QtrDash()

    ?loc = Rocky
        Rocky()
    :?loc = Deadwood
        Deadwood()
    :?loc = Caves
        Caves()
    :?loc = Mushroom
        Mushroom()
    :?loc = Halls
        Halls()
    :?loc = Mine
        Mine()
    :?loc = Icy
        Icy()
    :?loc = Temple
        Temple()

    // No deadwood - poena bites 
    :?loc ! Deadwood
        FireTalisman()

    EquipItems()
    ActivateItems()

    HUD()

Main()